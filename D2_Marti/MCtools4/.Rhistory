install.packages("devtools")
install.packages("dplyr")
install.packages("tibble")
install.packages("DiagrammeR")
install.packages("DiagrammeRsvg")
install.packages("xml2")
library(devtools)
load_all()
N  <- 100
posibles_dates <- as.Date(18628:18648,origin="1970-01-01")
dia_entrada <- sample(posibles_dates, size = N, replace = TRUE)
posibles_dates <- as.Date(18658:18700,origin="1970-01-01")
dia_ev1 <- sample (posibles_dates, size = N, replace = TRUE)
dia_ev1[sample(1:N,75)] <- NA
dia_ev2 <- sample (posibles_dates, size = N, replace = TRUE)
dia_ev2[sample(1:N,75)] <- NA
dia_ev3 <- sample (posibles_dates, size = N, replace = TRUE)
dia_ev3[sample(1:N,75)] <- NA
dia_censor <- sample (posibles_dates, size = N, replace = TRUE)
ID <- 1:N
data_test <- tibble::tibble(ID,dia_entrada,dia_censor,dia_ev1,dia_ev2,dia_ev3)
ComputeSurvivalMatrix(data_test,"dia_entrada",c("dia_ev1","dia_ev2"),"dia_censor",ReducedForm = TRUE, IndividualIdentifier = "ID")
list_matrices         <- NULL
list_matrices$matrix1 <- tibble::tibble(N = c(15000,12000),Label = c("TOTS",">50 anys"))
list_matrices$matrix2 <- tibble::tibble(N = c(11000,10500,8500),Label = c("A","B","C"))
list_matrices$matrix3 <- tibble::tibble(N = c(10300,7000,4200,850),Label = c("ABCD","EFGH","IJKLMN","OPQRST"))
relation <- tibble::tibble(mother = c("matrix1","matrix1"), daughter = c("matrix2","matrix3"))
nice.num <- function(x,n=0) {
trimws(format(round(x,n),big.mark=",", nsmall = n, digits=n, scientific=FALSE))
}
declaration <- "digraph {graph [overlap = true]
node [shape = box, fontname = Helvetica, color = black]
edge [color = black, fixedsize = true, width = 1.5]"
nodes  <- NULL
edges  <- NULL
labels <- NULL
l      <- 1
first_node <- NULL
last_node  <- NULL
nam        <- names(list_matrices)
for (i in 1:length(list_matrices)){
nam.i <- paste0("list_matrices$",nam[i])
eval(parse(text=paste0(nam.i,"$Nstr <-nice.num(as.numeric(",nam.i,"$N))")))
first_node <- c(first_node,l)
for (k in 1:nrow(eval(parse(text=nam.i)))) {
node  <- paste0("m",l," [label = '@@",l,"']")
nodes <- paste(nodes, node, sep = "\n")
if (k>1) {
edge  <- paste0("m",l-1," -> m",l,";")
edges <- paste(edges, edge, sep = "\n")
}
label  <- paste0("[",l,"]: paste0(",nam.i,"$Label[",k,"],' (N = ',",nam.i,"$Nstr[",k,"],')')")
labels <- paste(labels, label, sep = "\n")
l      <- l + 1
}
last_node <- c(last_node,l-1)
}
for (i in 1:nrow(Relation)){
mo    <- Relation$mother[i]
im    <- which(names(list_matrices)==mo)
i1    <- last_node[im]
da    <- Relation$daughter[i]
id    <- which(names(list_matrices)==da)
i2    <- first_node[id]
edge  <- paste0("m",i1," -> m",i2,";")
edges <- paste(edges, edge, sep = "\n")
}
diagram <- paste0(declaration,nodes,edges,"}",labels,sep="\n")
Relation <- relation
declaration <- "digraph {graph [overlap = true]
node [shape = box, fontname = Helvetica, color = black]
edge [color = black, fixedsize = true, width = 1.5]"
nodes  <- NULL
edges  <- NULL
labels <- NULL
l      <- 1
first_node <- NULL
last_node  <- NULL
nam        <- names(list_matrices)
for (i in 1:length(list_matrices)){
nam.i <- paste0("list_matrices$",nam[i])
eval(parse(text=paste0(nam.i,"$Nstr <-nice.num(as.numeric(",nam.i,"$N))")))
first_node <- c(first_node,l)
for (k in 1:nrow(eval(parse(text=nam.i)))) {
node  <- paste0("m",l," [label = '@@",l,"']")
nodes <- paste(nodes, node, sep = "\n")
if (k>1) {
edge  <- paste0("m",l-1," -> m",l,";")
edges <- paste(edges, edge, sep = "\n")
}
label  <- paste0("[",l,"]: paste0(",nam.i,"$Label[",k,"],' (N = ',",nam.i,"$Nstr[",k,"],')')")
labels <- paste(labels, label, sep = "\n")
l      <- l + 1
}
last_node <- c(last_node,l-1)
}
for (i in 1:nrow(Relation)){
mo    <- Relation$mother[i]
im    <- which(names(list_matrices)==mo)
i1    <- last_node[im]
da    <- Relation$daughter[i]
id    <- which(names(list_matrices)==da)
i2    <- first_node[id]
edge  <- paste0("m",i1," -> m",i2,";")
edges <- paste(edges, edge, sep = "\n")
}
diagram <- paste0(declaration,nodes,edges,"}",labels,sep="\n")
DiagrammeR::grViz(diagram)
DiagrammeRsvg::export_svg(DiagrammeR::grViz(diagram))
charToRaw(DiagrammeRsvg::export_svg(DiagrammeR::grViz(diagram)))
xml2::read_xml(charToRaw(DiagrammeRsvg::export_svg(DiagrammeR::grViz(diagram))))
nom <- "C:/Users/martics/OneDrive - Nexus365/MCToolsTest/MCToolsTest/prova3.svg"
xml2
xml2::write_xml(xml2::read_xml(charToRaw(DiagrammeRsvg::export_svg(DiagrammeR::grViz(diagram)))),nom)
load_all()
list_matrices         <- NULL
list_matrices$matrix1 <- tibble::tibble(N = c(15000,12000),Label = c("TOTS",">50 anys"))
list_matrices$matrix2 <- tibble::tibble(N = c(11000,10500,8500),Label = c("A","B","C"))
list_matrices$matrix3 <- tibble::tibble(N = c(10300,7000,4200,850),Label = c("ABCD","EFGH","IJKLMN","OPQRST"))
relation <- tibble::tibble(mother = c("matrix1","matrix1"), daughter = c("matrix2","matrix3"))
dia<-compute_diagram(list_matrices2,relation,"C:/Users/martics/OneDrive - Nexus365/MCToolsTest/MCToolsTest/prova67.svg")
list_matrices2         <- NULL
list_matrices2$matrix1 <- tibble::tibble(N = c(15000,12000),Label = c("TOTS",">50 anys"))
list_matrices2$matrix2 <- tibble::tibble(N = c(11000,10500,8500),Label = c("A","B","C"))
list_matrices2$matrix3 <- tibble::tibble(N = c(10300,7000,4200,850),Label = c("ABCD","EFGH","IJKLMN","OPQRST"))
relation <- tibble::tibble(mother = c("matrix1","matrix1"), daughter = c("matrix2","matrix3"))
dia<-compute_diagram(list_matrices2,relation,"C:/Users/martics/OneDrive - Nexus365/MCToolsTest/MCToolsTest/prova67.svg")
install()
check()
load_all()
check()
library(MCtools4)
